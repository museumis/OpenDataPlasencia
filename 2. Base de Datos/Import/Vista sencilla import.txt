CREATE DATABASE CIUDADES2


/*------------- TABLAS --------------*/

CREATE TABLE CIUDAD(
COD_CIUDAD INT PRIMARY KEY,
NOMBRE VARCHAR(20),
PAIS VARCHAR(20),
PAGINA_WEB VARCHAR(50),
GOOGLE_MAP VARCHAR(50),
POBLACION INT,
FIESTAS_INICIO DATE,
FIESTAS_FIN DATE,
CODIGO_POSTAL VARCHAR(10)
);

SELECT *
FROM CIUDAD

/*~~~~~~~~~~~~~~~~*/

CREATE TABLE GOBIERNO(
COD_GOBERNANTE INT UNIQUE,
COD_CIUDAD INT,
NOMBRE VARCHAR(50),
MINISTERIO VARCHAR(30),
FECHA_INICIO DATE,
FECHA_FIN DATE,
ALCALDE INT,

CONSTRAINT FK_GOB FOREIGN KEY (COD_CIUDAD) REFERENCES CIUDAD(COD_CIUDAD) ON DELETE RESTRICT ON UPDATE CASCADE,
CONSTRAINT FK_ALC FOREIGN KEY (ALCALDE) REFERENCES GOBIERNO(COD_GOBERNANTE)ON DELETE RESTRICT ON UPDATE CASCADE,
CONSTRAINT PK_GOB PRIMARY KEY (COD_GOBERNANTE,COD_CIUDAD)
);

SELECT *
FROM GOBIERNO

SELECT DISTINCT ALCALDE
FROM GOBIERNO;


/*~~~~~~~~~~~~~~~~*/
/*Organismos sociales  -> Tipo: Seguridad, Educación y Sanidad*/

CREATE TABLE ORGANISMO(
COD_ORGANISMO INT UNIQUE,
COD_CIUDAD INT,
NOMBRE VARCHAR(50),
DIRECCION VARCHAR(50),
TELEFONO VARCHAR(50),
TIPO VARCHAR(20) NOT NULL,

CONSTRAINT FK_ORG FOREIGN KEY (COD_CIUDAD) REFERENCES CIUDAD(COD_CIUDAD) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_ORG PRIMARY KEY (COD_ORGANISMO,COD_CIUDAD)
);

SELECT *
FROM ORGANISMO

DROP TABLE ORGANISMO

/*·····*/

CREATE TABLE CLASEORGANISMO(
COD_CLASEORG INT UNIQUE,
COD_ORGANISMO INT,
INSTITUCION VARCHAR(20) NOT NULL,

CONSTRAINT FK_COR FOREIGN KEY(COD_ORGANISMO) REFERENCES ORGANISMO(COD_ORGANISMO) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_COR PRIMARY KEY(COD_CLASEORG,COD_ORGANISMO)
);

SELECT *
FROM CLASEORGANISMO


DROP TABLE CLASEORGANISMO
/*·····*/


CREATE TABLE INSTITUTO(
COD_INSTITUTO INT UNIQUE,
COD_CLASEORG INT,

CONSTRAINT FK_INS FOREIGN KEY (COD_CLASEORG) REFERENCES CLASEORGANISMO(COD_CLASEORG) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_INS PRIMARY KEY (COD_INSTITUTO,COD_CLASEORG)
);

SELECT *
FROM INSTITUTO

DROP TABLE INSTITUTO

CREATE TABLE DEPARTAMENTO(
COD_DEPARTAMENTO INT,
COD_INSTITUTO INT,
NOMBRE VARCHAR(50),
NUMERO_PLAZAS INT,

CONSTRAINT FK_DEP FOREIGN KEY (COD_INSTITUTO) REFERENCES INSTITUTO(COD_INSTITUTO) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_DEP PRIMARY KEY (COD_DEPARTAMENTO,COD_INSTITUTO)
);

SELECT *
FROM DEPARTAMENTO

DROP TABLE DEPARTAMENTO

/*·····*/
CREATE TABLE UNIVERSIDAD(
COD_UNIVERSIDAD INT UNIQUE,
COD_CLASEORG INT,


CONSTRAINT FK_UNI FOREIGN KEY (COD_CLASEORG) REFERENCES CLASEORGANISMO(COD_CLASEORG)ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_UNI PRIMARY KEY (COD_UNIVERSIDAD,COD_CLASEORG)
);

SELECT *
FROM UNIVERSIDAD

DROP TABLE UNIVERSIDAD

CREATE TABLE CARRERA(
COD_DEPARTAMENTO INT,
COD_UNIVERSIDAD INT,
NOMBRE VARCHAR(50),
NUMERO_PLAZAS INT,

CONSTRAINT FK_CAR FOREIGN KEY (COD_UNIVERSIDAD) REFERENCES UNIVERSIDAD(COD_UNIVERSIDAD)ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_CAR PRIMARY KEY (COD_UNIVERSIDAD,COD_DEPARTAMENTO)
);

SELECT *
FROM CARRERA

DROP TABLE CARRERA



/*·····*/
CREATE TABLE HOSPITAL(

COD_HOSPITAL INT UNIQUE,
COD_CLASEORG INT,

NUMERO_CAMAS INT,

CONSTRAINT FK_HOS FOREIGN KEY (COD_CLASEORG) REFERENCES CLASEORGANISMO(COD_CLASEORG) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_HOS PRIMARY KEY (COD_HOSPITAL,COD_CLASEORG)
);

SELECT *
FROM HOSPITAL

DROP TABLE HOSPITAL

/*·····*/
CREATE TABLE CENTRO_SALUD(
COD_CENTROSALUD INT UNIQUE,
COD_CLASEORG INT,

CONSTRAINT FK_CSA FOREIGN KEY (COD_CLASEORG) REFERENCES CLASEORGANISMO(COD_CLASEORG)ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_CSA PRIMARY KEY (COD_CENTROSALUD,COD_CLASEORG)
);

SELECT *
FROM CENTRO_SALUD

DROP TABLE CENTRO_SALUD 



/*~~~~~~~~~~~~~~~~*/

CREATE TABLE BARRIO(
COD_BARRIO INT UNIQUE,
COD_CIUDAD INT,
NOMBRE VARCHAR(50),
CENTRO_SALUD INT,

CONSTRAINT FK_BAR FOREIGN KEY (COD_CIUDAD) REFERENCES CIUDAD(COD_CIUDAD) ON DELETE RESTRICT ON UPDATE CASCADE,
CONSTRAINT FK_BARC FOREIGN KEY (CENTRO_SALUD) REFERENCES CENTRO_SALUD(COD_CENTROSALUD) ON DELETE RESTRICT ON UPDATE CASCADE,
CONSTRAINT PK_BAR PRIMARY KEY (COD_BARRIO,COD_CIUDAD)
);

SELECT * 
FROM BARRIO

DROP TABLE BARRIO 

CREATE TABLE ASOCIACION_VECINO(
COD_ASOCIACION INT UNIQUE,
COD_BARRIO INT,
NOMBRE VARCHAR(50),
DIRECCION VARCHAR(50),
TELEFONO VARCHAR(50),


CONSTRAINT FK_AVE FOREIGN KEY (COD_BARRIO) REFERENCES BARRIO(COD_BARRIO)ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT PK_AVE PRIMARY KEY (COD_ASOCIACION,COD_BARRIO)
);

SELECT * 
FROM ASOCIACION_VECINO

DROP TABLE ASOCIACION_VECINO

/*~~~~~~~~~~~~~~~~*/


/*CIUDAD 1 - PLASENCIA*/

/*--------------------------*/

INSERT INTO CIUDAD
	VALUES(1,'Plasencia','España', 'http://www.plasencia.es','https://www.google.es/maps/place/Plasencia',40663,'2017-7-31','2017-8-2','10600')
	;

SELECT *
FROM CIUDAD

/*--------------------------*/

INSERT INTO GOBIERNO
	VALUES(1,1,'Fernando Pizarro García','Alcaldia','2015-5-24',null,1),
	(2,1,'Luis Díaz Sánchez','Juventud','2015-5-24',null,1),
	(3,1,'Fernando Pizarro','Educación','2015-5-24',null,1),
	(4,1,'David Dóniga Estévez','Innovación','2015-5-24',null,1),	
	(5,1,'Mª Luisa Bermejo','Cultura','2015-5-24',null,1)
	;

SELECT *
FROM GOBIERNO


/*--------------------------*/

INSERT INTO ORGANISMO
VALUES(1,1,'Parque Comarcal de bomberos de Plasencia','Polígono Industrial. C/ Juan de la Cierva  s/n','080/927 410 080/927 427 063','Seguridad'),
(2,1,'Jefatura de la Policía Local','Avenida de las Acacias, s/n (La Mazuela)','092/927 42 13 15/927 42 65 64','Seguridad'),
(3,1,'C.C.E.I.P.S San Calixto','Av. Virgen del Puerto','927 41 13 47','Educación'),
(4,1,'C.E.I.P. Miralvalle','Calle Cayetano García Martín','927 01 78 00','Educación'),
(5,1,'Colegio Público El Pilar','Av. Extremadura','927 41 13 47','Educación'),
(6,1,'C.E.I.P. Alfonso VIII','Calle Cristo de las Batallas','927 01 77 96','Educación'),
(7,1,'CEIP Inés Suárez','Parque de la Coronación','927 01 77 84','Educación'),
(8,1,'IES Valle del Jerte','Calle Pedro y Francisco González','927 01 77 74','Educación'),
(9,1,'I.E.S. Gabriel y Galán','España, Av. Cañada Real','927 01 77 88','Educación'),
(10,1,'Instituto Pérez Comendador','Av. Virgen del Puerto','927 01 77 32','Educación'),
(11,1,'I.E.S. Sierra de Santa Bárbara','Calle Aldehuela del Jerte','927 42 46 26','Educación'),
(12,1,'Centro Universitario De Plasencia','Av. Virgen del Puerto','927 42 77 00','Educación'),
(13,1,'U.N.E.D. Plasencia','Plaza Sta. Ana','927 42 05 20','Educación'),
(14,1,'Hospital Virgen del puerto','Paraje Valcorchero','927 42 83 00','Sanidad'),
(15,1,'Luis de Toro','Calle Luis de Toro','CitaPrevia:927 423 436/Urgencias:927 423 380','Sanidad'),
(16,1,'San Miguel','Calle Antonio Vargas y Laguna','Urgencias: 927 407 522','Sanidad'),
(17,1,'La Data','Calle Cañada Real','CitaPrevia:927 428 421/Urgencias:927 428 420','Sanidad'),
(18,1,'Salud Mental','Avda.de la Salle','927 458 036','Sanidad'),
(19,1,'Conductas Adictivas','Avda.de la Salle','927 458 036','Sanidad')


INSERT INTO ORGANISMO
VALUES()

SELECT *
FROM ORGANISMO

DELETE FROM ORGANISMO

/*--------------------------*/
/*Cod_claseorg / Cod_Organismo / tipo Institución*/

INSERT INTO CLASEORGANISMO
VALUES(1,8,'Instituto'),
(2,9,'Instituto'),
(3,10,'Instituto'),
(4,11,'Instituto'),
(5,12,'Universidad'),
(6,13,'Universidad'),
(7,14,'Hospital'),
(8,15,'Centro de Salud'),
(9,16,'Centro de Salud'),
(10,17,'Centro de Salud'),
(11,18,'Centro de Salud'),
(12,19,'Centro de Salud')

INSERT INTO CLASEORGANISMO
VALUES()

SELECT *
FROM CLASEORGANISMO

DELETE FROM CLASEORGANISMO

/*--------------------------*/

INSERT INTO INSTITUTO
VALUES(1,1),
(2,2),
(3,3),
(4,4)

SELECT *
FROM INSTITUTO

DELETE FROM INSTITUTO

/*--------------------------*/

INSERT INTO DEPARTAMENTO
VALUES(1,1,'Informática y Comunicaciones',100),
(2,1,'Tecnología',50),
(3,1,'Inglés',50),
(4,1,'Música',50),
(1,2,'Filosofía',50),
(2,2,'Física y Química',50),
(3,2,'Economía',50),
(4,2,'Peluquería',50),
(1,3,'Proyecto de Edificación y obra Civil',50),
(2,3,'Inglés',30),
(3,3,'Música',30),
(1,4,'Inglés',30),
(2,4,'Música',30)


SELECT * 
FROM DEPARTAMENTO

DELETE FROM DEPARTAMENTO

SELECT *
FROM DEPARTAMENTO
WHERE COD_INSTITUTO = 1;

SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN INSTITUTO ON INSTITUTO.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN DEPARTAMENTO ON INSTITUTO.COD_INSTITUTO = DEPARTAMENTO.COD_INSTITUTO
WHERE DEPARTAMENTO.NOMBRE = 'Informática y Comunicaciones';

/*--------------------------*/

INSERT INTO UNIVERSIDAD
VALUES(1,5),
(2,6)

SELECT *
FROM UNIVERSIDAD

DELETE FROM UNIVERSIDAD

/*--------------------------*/


INSERT INTO CARRERA
VALUES(1,1,'Grado en Administración y Dirección de Empresas',200),
(2,1,'Grado en Enfermería',100),
(3,1,'Grado en Ingeniería Forestal y del Medio Natural',150),
(4,1,'Grado en Podología',150),

(1,2,'Filosofía',200),
(2,2,'Historia',200),
(3,2,'Ciencias Físicas',150),
(4,2,'Derecho',150)

SELECT * 
FROM CARRERA


SELECT *
FROM CARRERA
WHERE COD_UNIVERSIDAD=1;

SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN UNIVERSIDAD ON UNIVERSIDAD.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN CARRERA ON UNIVERSIDAD.COD_UNIVERSIDAD = CARRERA.COD_UNIVERSIDAD
WHERE CARRERA.NOMBRE = 'Filosofía';

/*--------------------------*/
INSERT INTO HOSPITAL
VALUES(1,7,250)

SELECT *
FROM HOSPITAL

DELETE FROM HOSPITAL


/*--------------------------*/
INSERT INTO CENTRO_SALUD
VALUES(1,8),
(2,9),
(3,10),
(4,11),
(5,12)

SELECT *
FROM CENTRO_SALUD

/*--------------------------*/

INSERT INTO BARRIO
VALUES(1,1,'Rosal de Ayala',1),
(2,1,'Miralvalle',3),
(3,1,'El Pilar',3),
(4,1,'San Miguel',2),
(5,1,'La Data',2)

DELETE FROM BARRIO

SELECT *
FROM BARRIO

SELECT *
FROM BARRIO
WHERE CENTRO_SALUD = '3'

SELECT *
FROM CENTRO_SALUD INNER JOIN BARRIO ON CENTRO_SALUD.COD_CENTROSALUD=BARRIO.CENTRO_SALUD
WHERE BARRIO.NOMBRE = 'Rosal de Ayala'

SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN CENTRO_SALUD ON CENTRO_SALUD.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN BARRIO ON CENTRO_SALUD.COD_CENTROSALUD=BARRIO.CENTRO_SALUD
WHERE BARRIO.NOMBRE = 'Rosal de Ayala'


/*--------------------------*/

INSERT INTO ASOCIACION_VECINO
VALUES(1,1,'Rosal de Ayala','C/ Enrique de Egas','927 42 64 56/651 96 12 29'),
(2,2,'Asociación de Vecinos de Miralvalle','Calle Enrique de Egas','927 41 08 99/686 06 66 57'),
(3,3,'El pilar-plaza de toros','pilarplasezadetoros@hotmail.com','927424100 / 674183125'),
(4,5,'La Data','C/ Cañada Real','927 41 59 10')

SELECT *
FROM ASOCIACION_VECINO


SELECT *
FROM CIUDAD

SELECT *
FROM GOBIERNO

SELECT *
FROM ORGANISMO

SELECT *
FROM CLASEORGANISMO

SELECT *
FROM INSTITUTO

SELECT * 
FROM DEPARTAMENTO

SELECT *
FROM UNIVERSIDAD

SELECT * 
FROM CARRERA

SELECT *
FROM HOSPITAL

SELECT *
FROM CENTRO_SALUD


SELECT *
FROM BARRIO

SELECT *
FROM ASOCIACION_VECINO

/*-----------------------------------------------------*/

/* 1 - Vista del gobieno*/
CREATE VIEW VISTAGOBIERNO
AS
SELECT NOMBRE, MINISTERIO
FROM GOBIERNO

SELECT * FROM VISTAGOBIERNO

/* 2 - Muestra el alcalde de la ciudad */
SELECT NOMBRE AS "Alcalde"
FROM GOBIERNO
WHERE COD_GOBERNANTE = ALCALDE;

/* 3  - Muestra los organismos de la ciudad */
SELECT NOMBRE, DIRECCION, TELEFONO,TIPO
FROM ORGANISMO
WHERE COD_CIUDAD =1
ORDER BY TIPO;

/* 4 - Cuenta los organismos de cada tipo que hay en la ciudad */
SELECT TIPO,COUNT(COD_ORGANISMO) 
FROM ORGANISMO
GROUP BY TIPO

/*  5 - Muestra todos los datos que hay del barrio de Rosal de Ayala y su centro de salud*/5
SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN CENTRO_SALUD ON CENTRO_SALUD.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN BARRIO ON CENTRO_SALUD.COD_CENTROSALUD=BARRIO.CENTRO_SALUD
WHERE BARRIO.NOMBRE = 'Rosal de Ayala'

/* 6 - Muestra el organismo donde se imparte la carrera de Filosofía en Plasencia*/
SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN UNIVERSIDAD ON UNIVERSIDAD.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN CARRERA ON UNIVERSIDAD.COD_UNIVERSIDAD = CARRERA.COD_UNIVERSIDAD
WHERE CARRERA.NOMBRE = 'Filosofía';

/* 7 - Muestra el organismo donde se imparte el ciclo formatico de Informática y Comunicaciones en Plasencia*/
SELECT *
FROM ((ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN INSTITUTO ON INSTITUTO.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
INNER JOIN DEPARTAMENTO ON INSTITUTO.COD_INSTITUTO = DEPARTAMENTO.COD_INSTITUTO
WHERE DEPARTAMENTO.NOMBRE = 'Informática y Comunicaciones';


/* 8 - Muestra los datos de la asociación de veciones del pilar mediante subconsulta*/
SELECT NOMBRE, DIRECCION, TELEFONO
FROM ASOCIACION_VECINO
WHERE COD_ASOCIACION IN (SELECT COD_BARRIO
			FROM BARRIO
			WHERE NOMBRE = 'El Pilar')


/* 9 - Muestra los nombre del gobierno de la ciudad que llevan desde 2015*/
SELECT *
FROM GOBIERNO
WHERE EXTRACT(YEAR FROM FECHA_INICIO ) = '2015';

/* 10 - Muestra los datos de los hospitales que tienen mas de 200 camas*/
SELECT * FROM
(ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN HOSPITAL ON HOSPITAL.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG 
WHERE HOSPITAL.NUMERO_CAMAS > '200';

/* 11 - Muestra las carrares que se imparten en la UNED mediante subconsulta*/
SELECT nombre
FROM CARRERA
WHERE COD_UNIVERSIDAD IN (	SELECT  COD_UNIVERSIDAD
				FROM UNIVERSIDAD
				WHERE COD_UNIVERSIDAD = 2)

/* 12 - Muestra los barrios que corresponden al centro de salud de código 1*/
SELECT nombre
FROM BARRIO
WHERE CENTRO_SALUD = '1'



/*--------------------------*/


/*1 - Comprueba si el hospital tiene más de 300 camas.*/
DECLARE @NUMEROCAMAS INT;
SET @NUMEROCAMAS = (SELECT NUMERO_CAMAS FROM
(ORGANISMO INNER JOIN CLASEORGANISMO ON ORGANISMO.COD_ORGANISMO=CLASEORGANISMO.COD_ORGANISMO)
INNER JOIN HOSPITAL ON HOSPITAL.COD_CLASEORG = CLASEORGANISMO.COD_CLASEORG)
IF(@NUMEROCAMAS>300)
BEGIN
PRINT'-El numero de camas en mayor que 300'
END
ELSE
BEGIN
PRINT'-El numero de camas en menor que 300'
END


/*2 - Haz un procedimiento que actualice el nÚmero de camas disponibles en el hospital.*/

ALTER PROCEDURE actualizarCamas @camas int
AS
UPDATE HOSPITAL SET NUMERO_CAMAS = @camas;

EXEC actualizarCamas '250'

/*3 - La consulta anterior con try/Cath.*/

ALTER PROCEDURE actualizarCamas @camas int
AS
BEGIN TRY
BEGIN TRAN
UPDATE HOSPITAL SET NUMERO_CAMAS = @camas;
COMMIT
END TRY
BEGIN CATCH
ROLLBACK
PRINT 'Error -> ' + ERROR_MESSAGE()
END CATCH

SELECT NUMERO_CAMAS FROM HOSPITAL

/*4 - Crea un procedimiento que retoner el número de camas, introduciendo el número de plantas.*/

CREATE PROCEDURE camasPorPlanta @camasPorPlanta DECIMAL(10,2) OUTPUT, @plantas INT
AS
BEGIN TRY
BEGIN TRAN
SET @camasPorPlanta = (SELECT NUMERO_CAMAS FROM HOSPITAL)/@plantas
COMMIT
END TRY
BEGIN CATCH
ROLLBACK
PRINT 'Error -> ' + ERROR.MESSAGE()
END CATCH


DECLARE @camasPorPlanta DECIMAL(10,2) 
EXEC camasPorPlanta @camasPorPlanta output,'5'
select @camasPorPlanta AS NumeroDeCamasPorPlanta

/* 5 - Crea una funcion que cuente los organismos de la ciudad*/
CREATE FUNCTION numeroOrg()
RETURNS INT
AS
BEGIN
DECLARE @total INT
SET @total =
(SELECT COUNT(COD_ORGANISMO) 
FROM ORGANISMO
WHERE TIPO ='Educación'
GROUP BY TIPO)
 + 
(SELECT COUNT(COD_ORGANISMO) 
FROM ORGANISMO
WHERE TIPO ='Sanidad'
GROUP BY TIPO)
 + 
(SELECT COUNT(COD_ORGANISMO) 
FROM ORGANISMO
WHERE TIPO ='Seguridad'
GROUP BY TIPO) 
RETURN @total
END

SELECT DBO.numeroOrg() AS Organismos

/*6 - Crea un triger para impedir que se pueda actualizar la tabla ciudad*/

ALTER TRIGGER noUpdateCiudad
on Ciudad
FOR UPDATE
AS
PRINT'NO SE PUEDE ACTUALIZAR LA TABLA CIUDAD.'
ROLLBACK TRANSACTION

UPDATE CIUDAD SET PAIS = 'NoSeActualiza'

SELECT * FROM CIUDAD

DISABLE TRIGGER noUpdateCiudad ON CIUDAD

ENABLE TRIGGER noUpdateCiudad ON CIUDAD